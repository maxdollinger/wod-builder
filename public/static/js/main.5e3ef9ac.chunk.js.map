{"version":3,"sources":["components/randomWorkout/randomWorkout.jsx","App.js","reportWebVitals.js","index.js"],"names":["window","location","protocol","hostname","port","includes","useStyles","makeStyles","root","color","width","height","padding","textAlign","backgroundColor","workoutText","fontSize","fontWeight","paddingTop","RandomWorkout","classes","useState","workout","setWorkout","Paper","elevation","className","Grid","container","item","xs","Button","onClick","axios","method","url","then","res","data","split","variant","map","el","i","display","center","margin","copyright","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAImCA,OAAOC,SAApCC,E,EAAAA,SAAUC,E,EAAAA,SAAUC,E,EAAAA,MACZ,cAAbD,GAA4BA,EAASE,SAAS,WAAaD,EAAO,KAEnE,IAAME,EAAYC,aAAY,iBAAO,CAChCC,KAAM,CACDC,MAAO,UACPC,MAAO,QACPC,OAAQ,QACRC,QAAS,OACTC,UAAW,SACX,iBAAkB,CACbC,gBAAiB,YAG3BC,YAAa,CACRN,MAAO,UACPO,SAAU,SACVC,WAAY,OACZC,WAAY,YAIP,SAASC,IACnB,IAAMC,EAAUd,IADmB,EAERe,mBAAS,IAFD,mBAE/BC,EAF+B,KAEtBC,EAFsB,KAetC,OACE,cAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,UAAWN,EAAQZ,KAAxC,SACE,eAACmB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CAAQC,QAfI,WAClBC,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKjC,EAAL,aAAkBC,GAAlB,OACDC,EAAO,IAAMA,EAAO,GADnB,yBAGFgC,MAAK,SAACC,GACPd,EAAWc,EAAIC,KAAKA,KAAKC,MAAM,WAQGC,QAAQ,YAAY/B,MAAM,UAAxD,4BAEF,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIJ,UAAWN,EAAQL,YAAtC,SACGO,EAAQmB,KAAI,SAACC,EAAGC,GAAJ,OACX,8BAAcD,GAAJC,aC7CtB,IAAMrC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJG,OAAQ,OACRiC,QAAS,QAEXC,OAAQ,CACNC,OAAQ,QAEVC,UAAW,CACTpC,OAAQ,MACRD,MAAO,OACPG,UAAW,cAkBAmC,MAdf,WACE,IAAM5B,EAAUd,IAEhB,OAAO,gCAAK,qBAAKoB,UAAWN,EAAQZ,KAAxB,SACV,qBAAKkB,UAAWN,EAAQyB,OAAxB,SACE,cAAC1B,EAAD,QAGF,qBAAKO,UAAWN,EAAQ2B,UAAxB,SACE,qEChBSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e3ef9ac.chunk.js","sourcesContent":["import { Grid, Button, Paper, makeStyles } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nlet { protocol, hostname, port } = window.location;\r\n(hostname === \"localhost\" || hostname.includes(\"192.\")) && (port = 5000);\r\n\r\nconst useStyles = makeStyles( () => ({\r\n     root: {\r\n          color: '#30475e',\r\n          width: '300px',\r\n          height: '300px',\r\n          padding: '10px',\r\n          textAlign: 'center',\r\n          \"& button:hover\": {\r\n               backgroundColor: '#f05454',\r\n          }\r\n     },\r\n     workoutText: {\r\n          color: '#30475e',\r\n          fontSize: '1.1rem',\r\n          fontWeight: 'bold',\r\n          paddingTop: '20px',\r\n     },\r\n}))\r\n\r\nexport default function RandomWorkout() {\r\n     const classes = useStyles();\r\n  const [workout, setWorkout] = useState([]);\r\n\r\n  const handleCLick = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `${protocol}//${hostname}${\r\n        port ? \":\" + port : \"\"\r\n      }/api/workout/random`,\r\n    }).then((res) => {\r\n      setWorkout(res.data.data.split(\"\\n\"));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={4} className={classes.root}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Button onClick={handleCLick} variant='contained' color='primary'>Load Workout</Button>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.workoutText}>\r\n          {workout.map((el,i) => (\r\n            <div key={i}>{el}</div>\r\n          ))}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import './App.css';\nimport { makeStyles } from \"@material-ui/core\";\nimport RandomWorkout from './components/randomWorkout/randomWorkout';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '95vh',\n    display: 'flex',\n  },\n  center: {\n    margin: 'auto',\n  },\n  copyright: {\n    height: '5vh',\n    width: '100%',\n    textAlign: 'center',\n  }\n}))\n\nfunction App() {\n  const classes = useStyles();\n\n  return <div><div className={classes.root}>\n    <div className={classes.center}>\n      <RandomWorkout />\n    </div>\n  </div>\n    <div className={classes.copyright}>\n      <p>&#169; Maximilian Dollinger 2021</p>\n    </div>\n  </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}